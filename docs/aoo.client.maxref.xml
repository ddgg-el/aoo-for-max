<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./c74ref.xsl" type="text/xsl"?>

<c74object name="aoo.client" module="msp" category="Aoo">
<digest>
	An AooClient
</digest>
<description>
	Facilitates communication between several peers in a network.
</description>
<discussion>
	<p>The AOO client first connects to an AOO server. For the internet, the server has to be publicly accessable. For local networks, the server may be private, i.e. run on a user's machine.</p>
	<p>Once the client has joined a group, it receives a list of all existing peers in that group and is notified whenever a peer joins/leaves the group.</p>
	<p>Peers may send each other messages over the internet, which wouldn't be possible otherwise because of NAT and firewalls. For more info see https://en.wikipedia.org/wiki/UDP_hole_punching.</p>
	<p>A peer is referenced by its group and user name, so that &lt;group&gt; &lt;user&gt; effectively replaces &lt;host&gt; &lt;port&gt; in all relevant methods and events for [aoo_send~] and [aoo_receive~].</p>
	<p>All AOO objects on the same port share the same peer list.</p>
	<p>In addition, peers also have a user ID, IP address and port number. The user ID is a unique number for each user in a group.</p>
	<p>TIP: the user ID helps to faciliate ad hoc peer-to-peer audio streaming. The client would pick <link>aoo.receive~</link> objects for each peer and use the peer's user ID as the sink ID. The peer would in turn use its *own* user ID for its [aoo.send~] object.</p>
	<p>for more information about the project check the <a href="https://aoo.iem.sh/">Audio over OSC Library</a> website</p>
</discussion>
<!-- METADATA-->
<metadatalist>
	<metadata name="author" type="text">Davide Gagliardi and Francesca Seggioli</metadata>
	<metadata name="tag">Utility</metadata>
</metadatalist>
<!-- ARGUMENTS-->
<objarglist>
	<objarg name="port" type="int">
		<digest>Network receive port number</digest>
		<description>Network receive port number</description>
	</objarg>
</objarglist>
<!-- MESSAGES-->
<methodlist>
	<method name="connect" type="message">
		<arglist>
			<arg name="address" optional='0' type="symbol"/>
			<arg name="port" optional='0' type="int"/>
		</arglist>
		<digest>Connect to the AOO server</digest>
		<description>Connect to the AOO server with the given hostname/IP address and port number. Outputs 1 on success or 0 on failure.</description>
	</method>
	<method name="disconnect" type="message">
		<digest>Disconnect from the server.</digest>
		<description>Disconnect from the server.</description>
	</method>
</methodlist>
<!--SEEALSO-->
<seealsolist>
	<seealso name="aoo.send~"/>
	<seealso name="aoo.receive~"/>
	<seealso name="aoo.server"/>
</seealsolist>
</c74object>